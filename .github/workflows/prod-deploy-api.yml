name: Deploy PROD API (New Docker Deployment)

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  deployments: write
  id-token: write

jobs:
  build_docker:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        name: ['novu-0.24.0/api']
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Variables
        shell: bash
        run: |
          service=${{ matrix.name }}
          LATEST_VERSION=$(jq -r '.version' lerna.json)
          SERVICE_NAME=$(basename "${service//-/-}")
          SERVICE_COMMON_NAME=$(echo "$SERVICE_NAME" | sed 's/-ee$//')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
          echo "SERVICE_COMMON_NAME=$SERVICE_COMMON_NAME" >> $GITHUB_ENV
          echo "REGISTRY_OWNER=musama619" >> $GITHUB_ENV
          echo "This is the service name: $SERVICE_NAME and release version: $LATEST_VERSION"

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.8.1
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup Docker
        uses: crazy-max/ghaction-setup-docker@v2
        with:
          version: v24.0.6

      - name: build api
        run: pnpm build:api --skip-nx-cache
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: 'image=moby/buildkit:v0.12.4'

      - uses: ./.github/actions/free-space
        name: Extend space in Action Container

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: musama619
          password: ${{ secrets.NOVU_MD_TOKEN }}

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          REGISTRY_OWNER: musama619
          DOCKER_NAME: ${{matrix.name}}
          IMAGE_TAG: ${{ github.sha }}
          GH_ACTOR: ${{ github.actor }}
          GH_PASSWORD: ${{ secrets.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 }}
        run: |
          echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin
          cd apps/api && pnpm --silent --workspace-root pnpm-context -- apps/api/Dockerfile | BULL_MQ_PRO_NPM_TOKEN=${BULL_MQ_PRO_NPM_TOKEN} docker buildx build --secret id=BULL_MQ_PRO_NPM_TOKEN --build-arg PACKAGE_PATH=apps/api - -t novu-api --load --platform=linux/amd64,linux/arm64 --provenance=false
          docker tag novu-api ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:latest
          docker tag novu-api ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:prod
          docker tag novu-api ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG

          docker run --network=host --name api -dit --env NODE_ENV=test ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
          docker run --network=host appropriate/curl --retry 10 --retry-delay 5 --retry-connrefused http://127.0.0.1:1337/v1/health-check | grep 'ok'

          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:prod
          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:latest
          docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
          echo "IMAGE=ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT
